/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../common";
import type {
  Battleship,
  BattleshipInterface,
} from "../../contracts/Battleship";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_player1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_player2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "x",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "y",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "victim",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "hit",
        type: "bool",
      },
    ],
    name: "Attack",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "GameEnded",
    type: "event",
  },
  {
    inputs: [],
    name: "BOARD_SIZE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_x",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_y",
        type: "uint8",
      },
    ],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPlayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameEnded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameReady",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encryptedValue",
        type: "bytes",
      },
    ],
    name: "placeShips",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "player1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "player1Board",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "player1Ready",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "player1ShipsHit",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "player2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "player2Board",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "player2Ready",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "player2ShipsHit",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040516200193f3803806200193f833981016040819052620000359162000221565b604080518082018252601381527f417574686f72697a6174696f6e20746f6b656e00000000000000000000000000602080830191909152825180840190935260018352603160f81b90830152908181620000918260006200017f565b61012052620000a28160016200017f565b61014052815160208084019190912060e052815190820120610100524660a0526200013060e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0525050600280546001600160a01b039384166001600160a01b0319918216811790925560038054939094169281169290921790925560048054909116909117905562000442565b60006020835110156200019f576200019783620001b8565b9050620001b2565b81620001ac848262000300565b5060ff90505b92915050565b600080829050601f81511115620001ef578260405163305a27a960e01b8152600401620001e69190620003cc565b60405180910390fd5b8051620001fc826200041d565b179392505050565b80516001600160a01b03811681146200021c57600080fd5b919050565b600080604083850312156200023557600080fd5b620002408362000204565b9150620002506020840162000204565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200028457607f821691505b602082108103620002a557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002fb576000816000526020600020601f850160051c81016020861015620002d65750805b601f850160051c820191505b81811015620002f757828155600101620002e2565b5050505b505050565b81516001600160401b038111156200031c576200031c62000259565b62000334816200032d84546200026f565b84620002ab565b602080601f8311600181146200036c5760008415620003535750858301515b600019600386901b1c1916600185901b178555620002f7565b600085815260208120601f198616915b828110156200039d578886015182559484019460019091019084016200037c565b5085821015620003bc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808352835180602085015260005b81811015620003fc57858101830151858201604001528201620003de565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620002a55760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516114b16200048e6000396000610b7e01526000610b54015260005050600050506000505060005050600050506114b16000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806395b2b67211610097578063dc4a3e9511610066578063dc4a3e9514610245578063dfbf53ae1461024d578063ef85689714610260578063fbd4cc151461027457600080fd5b806395b2b672146101e4578063b63d13c1146101f8578063d30895e41461020c578063db57ab1b1461021f57600080fd5b806359a5f12d116100d357806359a5f12d1461018f578063808984ba146101a257806384b0196e146101b5578063916aa802146101d057600080fd5b80632f6fe3961461010557806342cea2131461012e5780634404a438146101435780634da1b6401461016e575b600080fd5b60055461011990600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b61014161013c36600461119d565b610287565b005b600454610156906001600160a01b031681565b6040516001600160a01b039091168152602001610125565b61018161017c36600461120f565b6105a6565b604051908152602001610125565b600354610156906001600160a01b031681565b6101416101b0366004611247565b6105d1565b6101bd610b46565b60405161012597969594939291906112ca565b60055461011990600160a81b900460ff1681565b60055461011990600160b01b900460ff1681565b60055461011990600160b81b900460ff1681565b600254610156906001600160a01b031681565b60055461023390600160c81b900460ff1681565b60405160ff9091168152602001610125565b610233600481565b600554610156906001600160a01b031681565b60055461023390600160c01b900460ff1681565b61018161028236600461120f565b610bce565b6002546001600160a01b03163314806102aa57506003546001600160a01b031633145b6103075760405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920706c61796572732063616e2063616c6c20746869732066756e637460448201526234b7b760e91b60648201526084015b60405180910390fd5b600554600160a01b900460ff16156103525760405162461bcd60e51b815260206004820152600e60248201526d11d85b59481a185cc8195b99195960921b60448201526064016102fe565b600554600160a81b900460ff16156103ac5760405162461bcd60e51b815260206004820152601260248201527f426f6172647320616c726561647920736574000000000000000000000000000060448201526064016102fe565b60006103ed83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bde92505050565b6002549091506000906001600160a01b0316330361040d57506006610411565b5060165b600061041d6001610bf1565b9050600061042b6000610bf1565b905060005b61043b600480611379565b60ff168110156104c05760006104596104548786610bfe565b610c3d565b905080856104686004856113b2565b60048110610478576104786113c6565b60040201600460ff168461048c91906113dc565b6004811061049c5761049c6113c6565b01556104a88382610c4a565b92506104b5866001610c7c565b955050600101610430565b506104d46104cf826006610c9f565b610cc2565b6002546001600160a01b0316330361051957600580547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b179055610548565b600580547fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff16600160b81b1790555b600554600160b81b900460ff16801561056a5750600554600160b01b900460ff165b1561059e57600580547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b1790555b505050505050565b601682600481106105b657600080fd5b6004020181600481106105c857600080fd5b01549150829050565b6002546001600160a01b03163314806105f457506003546001600160a01b031633145b61064c5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920706c61796572732063616e2063616c6c20746869732066756e637460448201526234b7b760e91b60648201526084016102fe565b600554600160a81b900460ff166106a55760405162461bcd60e51b815260206004820152600e60248201527f47616d65206e6f7420726561647900000000000000000000000000000000000060448201526064016102fe565b600554600160a01b900460ff16156106f05760405162461bcd60e51b815260206004820152600e60248201526d11d85b59481a185cc8195b99195960921b60448201526064016102fe565b6004546001600160a01b0316331461074a5760405162461bcd60e51b815260206004820152600d60248201527f4e6f7420796f7572207475726e0000000000000000000000000000000000000060448201526064016102fe565b6002546000906001600160a01b031633036107675750601661076b565b5060065b60006107a4828560ff1660048110610785576107856113c6565b600402018460ff166004811061079d5761079d6113c6565b0154610cce565b905060028160ff16106107f95760405162461bcd60e51b815260206004820152601a60248201527f416c72656164792061747461636b656420746869732063656c6c00000000000060448201526064016102fe565b8060ff166001036109cd576002546001600160a01b031633036108a75760058054600160c81b900460ff16906019610830836113f0565b82546101009290920a60ff81810219909316918316021790915560035460408051888416815292871660208401526001600160a01b0390911690820152600160608201527fc02985e452d459908529fa04dc1f43c766dac5974d48f27041221b6d1858f8be915060800160405180910390a1610934565b60058054600160c01b900460ff169060186108c1836113f0565b82546101009290920a60ff81810219909316918316021790915560025460408051888416815292871660208401526001600160a01b0390911690820152600160608201527fc02985e452d459908529fa04dc1f43c766dac5974d48f27041221b6d1858f8be915060800160405180910390a15b600554600160c01b900460ff166006148061095b5750600554600160c81b900460ff166006145b156109c857600580547fffffffffffffffffffffff0000000000000000000000000000000000000000001633908117600160a01b179091556040519081527f51b77d00d3c0b7e376e9ee146711ceb2c08e58a5dbe38055a618e52109f720c1906020015b60405180910390a15b610a8b565b6002546001600160a01b03163303610a34576003546040805160ff8088168252861660208201526001600160a01b0390921690820152600060608201527fc02985e452d459908529fa04dc1f43c766dac5974d48f27041221b6d1858f8be906080016109bf565b6002546040805160ff8781168252861660208201526001600160a01b039092168282015260006060830152517fc02985e452d459908529fa04dc1f43c766dac5974d48f27041221b6d1858f8be9181900360800190a15b610a956002610bf1565b828560ff1660048110610aaa57610aaa6113c6565b600402018460ff1660048110610ac257610ac26113c6565b01556002546004546001600160a01b03918216911603610b10576003546004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055610b40565b6002546004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039092169190911790555b50505050565b600060608082808083610b797f000000000000000000000000000000000000000000000000000000000000000083610cd9565b610ba47f00000000000000000000000000000000000000000000000000000000000000006001610cd9565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b600682600481106105b657600080fd5b6000610beb826002610d84565b92915050565b6000610beb826000610e1a565b600082610c1257610c0f6000610e93565b92505b81610c2457610c216000610bf1565b91505b610c3683610c3184610ea0565b610ead565b9392505050565b6000610beb826000610ee5565b600082610c5e57610c5b6000610bf1565b92505b81610c7057610c6d6000610bf1565b91505b610c3683836000610f21565b600082610c9057610c8d6000610e93565b92505b610c36838360ff166001610fbb565b600082610cb357610cb06000610bf1565b92505b610c36838360ff16600161100f565b610ccb81611063565b50565b6000610beb826110d2565b606060ff8314610cf357610cec83611136565b9050610beb565b818054610cff9061140f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2b9061140f565b8015610d785780601f10610d4d57610100808354040283529160200191610d78565b820191906000526020600020905b815481529060010190602001808311610d5b57829003601f168201915b50505050509050610beb565b600080838360f81b604051602001610d9d929190611449565b60408051601f1981840301815290829052630964a5d960e31b82529150605d90634b252ec890610dd1908490600401611478565b602060405180830381865afa158015610dee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e12919061148b565b949350505050565b604051631ce2e8d760e31b8152600481018390526001600160f81b031960f883901b166024820152600090605d9063e71746b8906044015b602060405180830381865afa158015610e6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c36919061148b565b6000610beb826002610e1a565b6000610beb826002610ee5565b604051630ccd46b160e31b81526004810183905260248101829052600060448201819052908190605d9063666a358890606401610dd1565b60405163025f346960e51b8152600481018390526001600160f81b031960f883901b166024820152600090605d90634be68d2090604401610e52565b6000808215610f355750600160f81b610f39565b5060005b60405163f953e42760e01b815260048101869052602481018590526001600160f81b031982166044820152605d9063f953e427906064015b602060405180830381865afa158015610f8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb2919061148b565b95945050505050565b6000808215610fcf5750600160f81b610fd3565b5060005b604051633bb860cf60e21b815260048101869052602481018590526001600160f81b031982166044820152605d9063eee1833c90606401610f71565b60008082156110235750600160f81b611027565b5060005b604051630d7c62eb60e31b815260048101869052602481018590526001600160f81b031982166044820152605d90636be3175890606401610f71565b60008160405160240161107891815260200190565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16634ee071a160e01b1781528151919250605d9060009081908490845afa610b4057600080fd5b6040516301693b9160e61b815260048101829052600090605d90635a4ee44090602401602060405180830381865afa158015611112573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610beb919061148b565b6060600061114383611175565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f811115610beb57604051632cd44ac360e21b815260040160405180910390fd5b600080602083850312156111b057600080fd5b823567ffffffffffffffff808211156111c857600080fd5b818501915085601f8301126111dc57600080fd5b8135818111156111eb57600080fd5b8660208285010111156111fd57600080fd5b60209290920196919550909350505050565b6000806040838503121561122257600080fd5b50508035926020909101359150565b803560ff8116811461124257600080fd5b919050565b6000806040838503121561125a57600080fd5b61126383611231565b915061127160208401611231565b90509250929050565b60005b8381101561129557818101518382015260200161127d565b50506000910152565b600081518084526112b681602086016020860161127a565b601f01601f19169290920160200192915050565b60ff60f81b881681526000602060e060208401526112eb60e084018a61129e565b83810360408501526112fd818a61129e565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b8181101561135157835183529284019291840191600101611335565b50909c9b505050505050505050505050565b634e487b7160e01b600052601160045260246000fd5b60ff818116838216029081169081811461139557611395611363565b5092915050565b634e487b7160e01b600052601260045260246000fd5b6000826113c1576113c161139c565b500490565b634e487b7160e01b600052603260045260246000fd5b6000826113eb576113eb61139c565b500690565b600060ff821660ff810361140657611406611363565b60010192915050565b600181811c9082168061142357607f821691505b60208210810361144357634e487b7160e01b600052602260045260246000fd5b50919050565b6000835161145b81846020880161127a565b6001600160f81b0319939093169190920190815260010192915050565b602081526000610c36602083018461129e565b60006020828403121561149d57600080fd5b505191905056fea164736f6c6343000816000a";

type BattleshipConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BattleshipConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Battleship__factory extends ContractFactory {
  constructor(...args: BattleshipConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _player1: AddressLike,
    _player2: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_player1, _player2, overrides || {});
  }
  override deploy(
    _player1: AddressLike,
    _player2: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_player1, _player2, overrides || {}) as Promise<
      Battleship & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Battleship__factory {
    return super.connect(runner) as Battleship__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BattleshipInterface {
    return new Interface(_abi) as BattleshipInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Battleship {
    return new Contract(address, _abi, runner) as unknown as Battleship;
  }
}
